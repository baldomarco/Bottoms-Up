text_files <- list.files(directory, pattern = "\\.txt$", full.names = TRUE)
text_files
file_path
# Define the directory containing the text files
directory <- "C:/iLand/2023/20230901_Bottoms_Up/Sources_bottoms_up/gis/init/init - Copy/"
# Get a list of all text files in the directory
text_files <- list.files(directory, pattern = "\\.txt$", full.names = TRUE)
text_files
# Function to process each text file
process_text_file <- function(file_path) {
# Extract plot ID from file name
plot_ID <- tools::file_path_sans_ext(basename(file_path))
# Read the init file
init_data <- read.table(file_path, header = TRUE, sep = ";")
# Read the corresponding age table based on plot ID
age_file_path <- paste0("C:/iLand/2023/20230901_Bottoms_Up/Sources_bottoms_up/Jenik/final_table_imp/Plot ", plot_ID, "_TreeAgesDerivedfromYieldTables.xlsx")
age_data <- read_excel(age_file_path)
# Manipulate the age dataframe to have only the age values
filtered_age <- age_data[, 12]
repeated_series <- c(filtered_age, filtered_age, filtered_age, filtered_age)
round_rep_age <- as.integer(round(as.numeric(repeated_series)))
# Create a new dataframe with the replicated values in a single column
new_age_data <- data.frame(age = round_rep_age)
# Combine columns between the init and age dataframes
init_data <- cbind(init_data, new_age_data)
# Write the updated data to a new file
write.table(init_data,
file = paste0(directory, plot_ID, "_init_age_CORR.txt"),
append = FALSE,
quote = FALSE,
sep = " ",
eol = "\n",
na = "NA",
dec = ".",
row.names = FALSE,
col.names = TRUE)
return(NULL)  # Return NULL since we're writing to file directly
}
# Process each text file in the directory
lapply(text_files, process_text_file)
# Define the directory containing the text files
directory <- "C:/iLand/2023/20230901_Bottoms_Up/Sources_bottoms_up/gis/init/init - Copy/"
# Get a list of all text files in the directory
text_files <- list.files(directory, pattern = "\\.txt$", full.names = TRUE)
# Define the directory containing the text files
directory <- "C:/iLand/2023/20230901_Bottoms_Up/Sources_bottoms_up/gis/init/init - Copy/"
# Get a list of all text files in the directory
text_files <- list.files(directory, pattern = "\\.txt$", full.names = TRUE)
# Function to process each text file
process_text_file <- function(file_path) {
# Extract plot ID from file name
plot_ID <- tools::file_path_sans_ext(basename(file_path))
# Read the init file
init_data <- read.table(file_path, header = TRUE, sep = ";")
# Extract age data corresponding to plot_ID from Katka_age_table
age_data <- Katka_age_table[Katka_age_table$plot_ID == plot_ID, "age"]
# Manipulate the age dataframe to have only the age values
repeated_series <- rep(age_data, each = 4)
round_rep_age <- as.integer(round(repeated_series))
# Create a new dataframe with the replicated values in a single column
new_age_data <- data.frame(age = round_rep_age)
# Combine columns between the init and age dataframes
init_data <- cbind(init_data, new_age_data)
# Write the updated data to a new file
write.table(init_data,
file = paste0(directory, plot_ID, "_init_age_CORR.txt"),
append = FALSE,
quote = FALSE,
sep = " ",
eol = "\n",
na = "NA",
dec = ".",
row.names = FALSE,
col.names = TRUE)
return(NULL)  # Return NULL since we're writing to file directly
}
# Process each text file in the directory
lapply(text_files, process_text_file)
plot_ID
process_text_file
file_path
file_path_sans_ext
plot_ID
age_data
# Read the init file
init_data <- read.table(file_path, header = TRUE, sep = ";")
Katka_age_table
# Function to process each text file
process_text_file <- function(file_path) {
# Extract plot ID from file name
plot_ID <- tools::file_path_sans_ext(basename(file_path))
# Read the init file
init_data <- read.table(file_path, header = TRUE, sep = ";")
# Extract age data corresponding to plot_ID from Katka_age_table
age_data <- Katka_age_table[Katka_age_table$plotID == plotID, "age"]
# Manipulate the age dataframe to have only the age values
repeated_series <- rep(age_data, each = 4)
round_rep_age <- as.integer(round(repeated_series))
# Create a new dataframe with the replicated values in a single column
new_age_data <- data.frame(age = round_rep_age)
# Combine columns between the init and age dataframes
init_data <- cbind(init_data, new_age_data)
# Write the updated data to a new file
write.table(init_data,
file = paste0(directory, plot_ID, "_init_age_CORR.txt"),
append = FALSE,
quote = FALSE,
sep = " ",
eol = "\n",
na = "NA",
dec = ".",
row.names = FALSE,
col.names = TRUE)
return(NULL)  # Return NULL since we're writing to file directly
}
# Process each text file in the directory
lapply(text_files, process_text_file)
file_path
# Function to process each text file
process_text_file <- function(file_path) {
# Extract plot ID from file name
plotID <- tools::file_path_sans_ext(basename(file_path))
# Read the init file
init_data <- read.table(file_path, header = TRUE, sep = ";")
# Extract age data corresponding to plot_ID from Katka_age_table
age_data <- Katka_age_table[Katka_age_table$plotID == plotID, "age"]
# Manipulate the age dataframe to have only the age values
repeated_series <- rep(age_data, each = 4)
round_rep_age <- as.integer(round(repeated_series))
# Create a new dataframe with the replicated values in a single column
new_age_data <- data.frame(age = round_rep_age)
# Combine columns between the init and age dataframes
init_data <- cbind(init_data, new_age_data)
# Write the updated data to a new file
write.table(init_data,
file = paste0(directory, plot_ID, "_init_age_CORR.txt"),
append = FALSE,
quote = FALSE,
sep = " ",
eol = "\n",
na = "NA",
dec = ".",
row.names = FALSE,
col.names = TRUE)
return(NULL)  # Return NULL since we're writing to file directly
}
# Process each text file in the directory
lapply(text_files, process_text_file)
text_files
# Extract plot ID from file name
plotID <- tools::file_path_sans_ext(basename(file_path))
# Define the directory containing the text files
directory <- "C:/iLand/2023/20230901_Bottoms_Up/Sources_bottoms_up/gis/init/init - Copy/"
# Get a list of all text files in the directory
text_files <- list.files(directory, pattern = "\\.txt$", full.names = TRUE)
# Print out the file names
print(text_files)
# Print out the plot IDs in Katka_age_table
print(unique(Katka_age_table$plotID))
# Function to process each text file
process_text_file <- function(file_path) {
# Extract plot ID from file name.  gsub("_init\\.txt$", "", tools::file_path_sans_ext(basename(file_path))) is used to remove the "_init.txt" suffix from the file name, leaving only the plot ID. This extracted plot ID is then used to match with the plot IDs in the Katka_age_table.
plotID <- gsub("_init\\.txt$", "", tools::file_path_sans_ext(basename(file_path)))
# Read the init file
init_data <- read.table(file_path, header = TRUE, sep = ";")
# Extract age data corresponding to plot_ID from Katka_age_table
age_data <- Katka_age_table[Katka_age_table$plotID == plotID, "age"]
# Manipulate the age dataframe to have only the age values
repeated_series <- rep(age_data, each = 4)
round_rep_age <- as.integer(round(repeated_series))
# Create a new dataframe with the replicated values in a single column
new_age_data <- data.frame(age = round_rep_age)
# Combine columns between the init and age dataframes
init_data <- cbind(init_data, new_age_data)
# Write the updated data to a new file
write.table(init_data,
file = paste0(directory, plotID, "_init_age_CORR.txt"),
append = FALSE,
quote = FALSE,
sep = " ",
eol = "\n",
na = "NA",
dec = ".",
row.names = FALSE,
col.names = TRUE)
return(NULL)  # Return NULL since we're writing to file directly
}
# Process each text file in the directory
lapply(text_files, process_text_file)
plotID
# Function to process each text file
process_text_file <- function(file_path) {
# Extract plot ID from file name
plotID <- gsub("_init\\.txt$", "", tools::file_path_sans_ext(basename(file_path)))
# Read the init file
init_data <- read.table(file_path, header = TRUE, sep = ";")
# Extract age data corresponding to plot_ID from Katka_age_table
age_data <- Katka_age_table[Katka_age_table$plotID == plotID, "age"]
print("Original age_data:")
print(age_data)
# Manipulate the age dataframe to have only the age values
repeated_series <- rep(age_data, each = 4)
print("Repeated series:")
print(repeated_series)
round_rep_age <- as.integer(round(repeated_series))
# Create a new dataframe with the replicated values in a single column
new_age_data <- data.frame(age = round_rep_age)
# Combine columns between the init and age dataframes
init_data <- cbind(init_data, new_age_data)
# Write the updated data to a new file
write.table(init_data,
file = paste0(directory, plotID, "_init_age_CORR.txt"),
append = FALSE,
quote = FALSE,
sep = " ",
eol = "\n",
na = "NA",
dec = ".",
row.names = FALSE,
col.names = TRUE)
return(NULL)  # Return NULL since we're writing to file directly
}
# Process each text file in the directory
lapply(text_files, process_text_file)
age_data
Katka_age_table$plotID
Katka_age_table$plotID == plotID,
Katka_age_table[Katka_age_table$plotID == plotID, "age"]
Katka_age_table
# Function to process each text file
process_text_file <- function(file_path) {
# Extract plot ID from file name
plotID <- gsub("_init\\.txt$", "", tools::file_path_sans_ext(basename(file_path)))
print("Extracted plot ID from file name:")
print(plotID)
# Read the init file
init_data <- read.table(file_path, header = TRUE, sep = ";")
# Extract age data corresponding to plot_ID from Katka_age_table
age_data <- Katka_age_table[Katka_age_table$plotID == plotID, "age"]
print("Original age_data:")
print(age_data)
# Manipulate the age dataframe to have only the age values
repeated_series <- rep(age_data, each = 4)
print("Repeated series:")
print(repeated_series)
round_rep_age <- as.integer(round(repeated_series))
# Create a new dataframe with the replicated values in a single column
new_age_data <- data.frame(age = round_rep_age)
# Combine columns between the init and age dataframes
init_data <- cbind(init_data, new_age_data)
# Write the updated data to a new file
write.table(init_data,
file = paste0(directory, plotID, "_init_age_CORR.txt"),
append = FALSE,
quote = FALSE,
sep = " ",
eol = "\n",
na = "NA",
dec = ".",
row.names = FALSE,
col.names = TRUE)
return(NULL)  # Return NULL since we're writing to file directly
}
# Process each text file in the directory
lapply(text_files, process_text_file)
# Function to process each text file
process_text_file <- function(file_path) {
# Extract plot ID from file name
plotID <- strsplit(basename(file_path), "_init\\.txt$")
plotID <- unlist(plotID)[1]  # Extract the first element of the list
print("Extracted plot ID from file name:")
print(plotID)
# Read the init file
init_data <- read.table(file_path, header = TRUE, sep = ";")
# Extract age data corresponding to plot_ID from Katka_age_table
age_data <- Katka_age_table[Katka_age_table$plotID == plotID, "age"]
print("Original age_data:")
print(age_data)
# Manipulate the age dataframe to have only the age values
repeated_series <- rep(age_data, each = 4)
print("Repeated series:")
print(repeated_series)
round_rep_age <- as.integer(round(repeated_series))
# Create a new dataframe with the replicated values in a single column
new_age_data <- data.frame(age = round_rep_age)
# Combine columns between the init and age dataframes
init_data <- cbind(init_data, new_age_data)
# Write the updated data to a new file
write.table(init_data,
file = paste0(directory, plotID, "_init_age_CORR.txt"),
append = FALSE,
quote = FALSE,
sep = " ",
eol = "\n",
na = "NA",
dec = ".",
row.names = FALSE,
col.names = TRUE)
return(NULL)  # Return NULL since we're writing to file directly
}
# Process each text file in the directory
lapply(text_files, process_text_file)
round_rep_age
round_rep_age <- as.integer(round(repeated_series))
# Function to process each text file
process_text_file <- function(file_path) {
# Extract plot ID from file name
plotID <- strsplit(basename(file_path), "_init\\.txt$")
plotID <- unlist(plotID)[1]  # Extract the first element of the list
print("Extracted plot ID from file name:")
print(plotID)
# Read the init file
init_data <- read.table(file_path, header = TRUE, sep = ";")
# Print the entire Katka_age_table to check plot IDs
print("Plot IDs in Katka_age_table:")
print(unique(Katka_age_table$plotID))
# Extract age data corresponding to plot_ID from Katka_age_table
age_data <- Katka_age_table[Katka_age_table$plotID == plotID, "age"]
print("Original age_data:")
print(age_data)
# Check if age_data is empty
if (length(age_data) == 0) {
print("No age data found for plot ID:", plotID)
return(NULL)
}
# Extract numeric values from age_data
age_values <- as.numeric(age_data$age)
# Manipulate the age dataframe to have only the age values
repeated_series <- rep(age_values, each = 4)
print("Repeated series:")
print(repeated_series)
round_rep_age <- as.integer(round(repeated_series))
# Create a new dataframe with the replicated values in a single column
new_age_data <- data.frame(age = round_rep_age)
# Combine columns between the init and age dataframes
init_data <- cbind(init_data, new_age_data)
# Write the updated data to a new file
write.table(init_data,
file = paste0(directory, plotID, "_init_age_CORR.txt"),
append = FALSE,
quote = FALSE,
sep = " ",
eol = "\n",
na = "NA",
dec = ".",
row.names = FALSE,
col.names = TRUE)
return(NULL)  # Return NULL since we're writing to file directly
}
# Process each text file in the directory
lapply(text_files, process_text_file)
filtered_age_L1_10
filtered_age_L1_10 <- age_L1_10[, 12]
# Function to process each text file
process_text_file <- function(file_path) {
# Extract plot ID from file name
plotID <- strsplit(basename(file_path), "_init\\.txt$")
plotID <- unlist(plotID)[1]  # Extract the first element of the list
print("Extracted plot ID from file name:")
print(plotID)
# Read the init file
init_data <- read.table(file_path, header = TRUE, sep = ";")
# Print the entire Katka_age_table to check plot IDs
print("Plot IDs in Katka_age_table:")
print(unique(Katka_age_table$plotID))
# Extract age data corresponding to plot_ID from Katka_age_table
age_data <- Katka_age_table[Katka_age_table$plotID == plotID, "age"]
print("Original age_data:")
print(age_data)
# Check if age_data is empty
if (length(age_data) == 0) {
print("No age data found for plot ID:", plotID)
return(NULL)
}
# Extract numeric values from age_data
age_values <- as.numeric(age_data$age)
# Determine the number of times to repeat the vector (in your case, 4)
num_repeats <- 4
# Replicate the entire vector `num_repeats` times
repeated_series <- rep(age_values, times = num_repeats)
print("Repeated series:")
print(repeated_series)
round_rep_age <- as.integer(round(repeated_series))
# Create a new dataframe with the replicated values in a single column
new_age_data <- data.frame(age = round_rep_age)
# Combine columns between the init and age dataframes
init_data <- cbind(init_data, new_age_data)
# Write the updated data to a new file
write.table(init_data,
file = paste0(directory, plotID, "_init_age_CORR.txt"),
append = FALSE,
quote = FALSE,
sep = " ",
eol = "\n",
na = "NA",
dec = ".",
row.names = FALSE,
col.names = TRUE)
return(NULL)  # Return NULL since we're writing to file directly
}
# Process each text file in the directory
lapply(text_files, process_text_file)
121*4
484-456
# Function to process each text file
process_text_file <- function(file_path) {
# Extract plot ID from file name
plotID <- strsplit(basename(file_path), "_init\\.txt$")
plotID <- unlist(plotID)[1]  # Extract the first element of the list
print("Extracted plot ID from file name:")
print(plotID)
# Read the init file
init_data <- read.table(file_path, header = TRUE, sep = ";")
# Print the entire Katka_age_table to check plot IDs
print("Plot IDs in Katka_age_table:")
print(unique(Katka_age_table$plotID))
# Extract age data corresponding to plot_ID from Katka_age_table
age_data <- Katka_age_table[Katka_age_table$plotID == plotID, "age"]
print("Original age_data:")
print(age_data)
# Check if age_data is empty
if (length(age_data) == 0) {
print("No age data found for plot ID:", plotID)
return(NULL)
}
# Extract numeric values from age_data
age_values <- as.numeric(age_data$age)
# Determine the number of times to repeat the vector (in your case, 4)
num_repeats <- 4
# Replicate the entire vector `num_repeats` times
repeated_series <- rep(age_values, times = num_repeats)
print("Repeated series:")
print(repeated_series)
round_rep_age <- as.integer(round(repeated_series))
# Create a new dataframe with the replicated values in a single column
new_age_data <- data.frame(age = round_rep_age)
# Combine columns between the init and age dataframes
init_data <- cbind(init_data, new_age_data)
# Write the updated data to a new file
write.table(init_data,
file = paste0(directory, plotID, "_init_age_CORR.txt"),
append = FALSE,
quote = FALSE,
sep = " ",
eol = "\n",
na = "NA",
dec = ".",
row.names = FALSE,
col.names = TRUE)
return(NULL)  # Return NULL since we're writing to file directly
}
# Process each text file in the directory
lapply(text_files, process_text_file)
library(dplyr)
library(readxl)
library(writexl)
# Import the tree age table derived from the age allometric function Katka created
Katka_age_table <- read_excel("C:/iLand/2023/20230901_Bottoms_Up/Sources_bottoms_up/Katka/CZ_JH1_EstimatedTreeAgeFromYielTables05042024.xlsx", sheet = 2)
# Transform the tree age decimal values in integers
Katka_age_table$age <- round(Katka_age_table$age)
str(Katka_age_table)
unique(Katka_age_table$plotID)
______________________________________________________________
# Function to process each text file
process_text_file <- function(file_path) {
# Extract plot ID from file name
plotID <- strsplit(basename(file_path), "_init\\.txt$")
plotID <- unlist(plotID)[1]  # Extract the first element of the list
print("Extracted plot ID from file name:")
print(plotID)
# Read the init file
init_data <- read.table(file_path, header = TRUE, sep = ";")
# Print the entire Katka_age_table to check plot IDs
print("Plot IDs in Katka_age_table:")
print(unique(Katka_age_table$plotID))
# Extract age data corresponding to plot_ID from Katka_age_table
age_data <- Katka_age_table[Katka_age_table$plotID == plotID, "age"]
print("Original age_data:")
print(age_data)
# Check if age_data is empty
if (length(age_data) == 0) {
print("No age data found for plot ID:", plotID)
return(NULL)
}
# Extract numeric values from age_data
age_values <- as.numeric(age_data$age)
# Determine the number of times to repeat the vector (in your case, 4)
num_repeats <- 4
# Replicate the entire vector `num_repeats` times
repeated_series <- rep(age_values, times = num_repeats)
print("Repeated series:")
print(repeated_series)
round_rep_age <- as.integer(round(repeated_series))
# Create a new dataframe with the replicated values in a single column
new_age_data <- data.frame(age = round_rep_age)
# Combine columns between the init and age dataframes
init_data <- cbind(init_data, new_age_data)
# Write the updated data to a new file
write.table(init_data,
file = paste0(directory, plotID, "_init_age_CORR.txt"),
append = FALSE,
quote = FALSE,
sep = " ",
eol = "\n",
na = "NA",
dec = ".",
row.names = FALSE,
col.names = TRUE)
return(NULL)  # Return NULL since we're writing to file directly
}
# Process each text file in the directory
lapply(text_files, process_text_file)
